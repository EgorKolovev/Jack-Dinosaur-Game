class Obstacle {
    field int legacyX, legacyY;
    field int x, y; // Position of the obstacle
    field int sizeX, sizeY;
    field boolean killDino;

    constructor Obstacle new(int Ax, int Ay, int AsizeX, int AsizeY) 
    {
        let x = Ax;
        let y = Ay;
        let sizeX = AsizeX;
        let sizeX = AsizeY;

        let legacyX = Ax;
        let legacyY = Ay;

        let killDino = false;

        return this;
    }

    method void run(Dinosaur dino) {
        do drawObstacle();
        do checkCollision(dino);
        return;
    }

method void checkCollision(Dinosaur dino) {
    // Get the coordinates and size of the dinosaur
    var int squareLeft, squareRight, squareTop, squareBottom, squareSize;
    var int dinoLeft, dinoRight, dinoTop, dinoBottom;

    let dinoLeft = dino.getX();
    let dinoRight = dinoLeft + dino.sizeX();
    let dinoTop = dino.getY();
    let dinoBottom = dinoTop + dino.sizeY();
    
    let squareLeft = x;
    let squareRight = squareLeft + 40;
    let squareTop = y;
    let squareBottom = squareTop + 30;
    
    // Check for collision by comparing coordinates and sizes
    if ((dinoLeft < squareRight) & (dinoBottom > squareTop) & (dinoRight > squareLeft)) 
    {
        let killDino = true;
    }
    
    return;
}


    method void drawObstacle(){
        do Screen.setColor(false);
        do Screen.drawRectangle(x, 210, x+sizeX, 250);
        let x = x + 1;

        do inTheEnd();

        do Screen.setColor(true);
        do Screen.drawRectangle(x, 210, x+sizeX, 250);

        return;
    }

    method void inTheEnd(){
        if ((x + sizeX) > 510){
            do createObstacle(legacyX, legacyY, sizeX, sizeY);
        }
        return;
    }

    method void createObstacle(int Ax, int Ay, int AsizeX, int AsizeY){
        let x = 0;
        let y = 210;
        let sizeX = 40;
        let sizeX = 30;
        return;
    }

    method boolean isDead(){
        return killDino;
    }
}
