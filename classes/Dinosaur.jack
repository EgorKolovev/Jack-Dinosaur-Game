class Dinosaur {
    field int x, y, sX, sY; 
    field boolean isJumping, isFalling;
    field int jumpHeight;

    field Ground ground;

    constructor Dinosaur new(int Ax, int Ay, int AsX,int AsY, int groundPosition) {
        let x = Ax;
        let y = Ay;
        let sX = AsX;
        let sY = AsY;
        let jumpHeight = 60;
        let ground = Ground.new(groundPosition);

        return this;
    }

    method int sizeX(){
        return sX;
    }
    method int sizeY(){
        return sY;
    }

    method void run(){
        do jumping();
        do falling();

        do drawDino();
        do ground.drawGround();

        do Sys.wait(5); 

        return;
    }

    
    method void startJump() {
        if (~isFalling){
            let isJumping = true;
        }
        return;
    }

    method void jumping(){
        if (isJumping){
            do clearDino();
            let y = y - 1;
            if (y < jumpHeight){
                do startFall();
            }
        }
        return;
    }

    method void startFall(){
        let isJumping = false;
        let isFalling = true;
        return;
    }

    method void falling(){
        if (isFalling){
            do clearDino();
            let y = y + 1;
            if ((y + sizeY()) = ground.groundPosition()){
                do stopFall();
            }
        }
        return;
    }

    method void stopFall(){
        let isFalling = false;
        return;
    }

    method void drawDino(){
        do Screen.setColor(true);
        if ((x > 0) & (x < 506) & (y > 10) & (y < 255))
        {
            do Screen.drawRectangle(x, y, x + sizeX(), y + sizeY());
        }
        return;
    }

    method void clearDino(){
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + sizeX(), y + sizeY());
        return;
    }



}
